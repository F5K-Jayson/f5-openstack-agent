My test setup works like this:

    # make a devenv directory on a system that can run docker
    mkdir devenv

    cd devenv

    git clone git@github.com:openstack/oslo.log.git

    git clone git@github.com:F5Networks/pytest-symbols.git

    git clone git@github.com:F5Networks/f5-openstack-lbaasv2-driver.git

    git clone git@github.com:F5Networks/f5-openstack-test

    git clone git@github.com:F5Networks/f5-openstack-agent.git

    git clone git@github.com:F5Networks/f5-common-python.git

    docker build -t test_base -f f5-openstack-agent/devtools/Dockerfiles/test_base .

    # replace DEVICE_IP with the actual address of your test device
    export DEVICE_IP=<address>
    files=`grep -Rl DEVICE_IP --include=*.json *`
    for f in $files; do
        sed -i ".bak" "s/DEVICE_IP/$DEVICE_IP/g" $f
    done

    edit or remove the VOLUME directive from f5-openstack-agent/test/functional/neutronless/*/Dockerfile to suit your purposes

    edit the last line of f5-openstack-agent/test/functional/neutronless/*/Dockerfile to customize how the tests will run (e.g. add ::test_loadbalancer_CD to the end of the line to run only that test)

    # example to run l2adjacent tests
    export IMAGE_TAG=l2adjacent`date "+%s"` && \
    docker build -t $IMAGE_TAG -f f5-openstack-agent/test/functional/neutronless/l2adjacent/Dockerfile .

    To change code in any of the related codebases... e.g. f5-common-python, simply change the code on the filesystem, and rerun the tests! The COPY directives in the Dockerfile ensure that local changes are added to the container image...

NOTE: If you change code in the repositories referenced in: f5-openstack-agent/devtools/Dockerfiles/test_base then you'll need to rebuild the test_base image! 
